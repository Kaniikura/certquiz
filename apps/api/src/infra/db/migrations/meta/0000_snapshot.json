{
  "id": "6daa4130-9009-47a5-b1d6-25b9b9a5d29c",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.auth_user": {
      "name": "auth_user",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "identity_provider_id": {
          "name": "identity_provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "user_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'user'"
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "ix_user_email": {
          "name": "ix_user_email",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_user_identity_provider": {
          "name": "ix_user_identity_provider",
          "columns": [
            {
              "expression": "identity_provider_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_user_role_active": {
          "name": "ix_user_role_active",
          "columns": [
            {
              "expression": "role",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "is_active",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "auth_user_email_unique": {
          "name": "auth_user_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        },
        "auth_user_username_unique": {
          "name": "auth_user_username_unique",
          "nullsNotDistinct": false,
          "columns": ["username"]
        },
        "auth_user_identity_provider_id_unique": {
          "name": "auth_user_identity_provider_id_unique",
          "nullsNotDistinct": false,
          "columns": ["identity_provider_id"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.bookmarks": {
      "name": "bookmarks",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "question_id": {
          "name": "question_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "pk_bookmarks": {
          "name": "pk_bookmarks",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "question_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_bookmarks_user": {
          "name": "ix_bookmarks_user",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "bookmarks_user_id_auth_user_user_id_fk": {
          "name": "bookmarks_user_id_auth_user_user_id_fk",
          "tableFrom": "bookmarks",
          "tableTo": "auth_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["user_id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "bookmarks_question_id_question_question_id_fk": {
          "name": "bookmarks_question_id_question_question_id_fk",
          "tableFrom": "bookmarks",
          "tableTo": "question",
          "columnsFrom": ["question_id"],
          "columnsTo": ["question_id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.drizzle_migrations": {
      "name": "drizzle_migrations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "hash": {
          "name": "hash",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.question": {
      "name": "question",
      "schema": "",
      "columns": {
        "question_id": {
          "name": "question_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "current_version": {
          "name": "current_version",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "created_by_id": {
          "name": "created_by_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "is_user_generated": {
          "name": "is_user_generated",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "is_premium": {
          "name": "is_premium",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "status": {
          "name": "status",
          "type": "question_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'active'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "ix_question_status_active": {
          "name": "ix_question_status_active",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "updated_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "status = 'active'",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_question_created_by": {
          "name": "ix_question_created_by",
          "columns": [
            {
              "expression": "created_by_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_question_premium": {
          "name": "ix_question_premium",
          "columns": [
            {
              "expression": "is_premium",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "question_created_by_id_auth_user_user_id_fk": {
          "name": "question_created_by_id_auth_user_user_id_fk",
          "tableFrom": "question",
          "tableTo": "auth_user",
          "columnsFrom": ["created_by_id"],
          "columnsTo": ["user_id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.question_version": {
      "name": "question_version",
      "schema": "",
      "columns": {
        "question_id": {
          "name": "question_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "version": {
          "name": "version",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "question_text": {
          "name": "question_text",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "question_type": {
          "name": "question_type",
          "type": "question_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "explanation": {
          "name": "explanation",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "detailed_explanation": {
          "name": "detailed_explanation",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "images": {
          "name": "images",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'"
        },
        "tags": {
          "name": "tags",
          "type": "text[]",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'"
        },
        "options": {
          "name": "options",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "exam_types": {
          "name": "exam_types",
          "type": "text[]",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'"
        },
        "categories": {
          "name": "categories",
          "type": "text[]",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'"
        },
        "difficulty": {
          "name": "difficulty",
          "type": "difficulty",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'Mixed'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "pk_question_version": {
          "name": "pk_question_version",
          "columns": [
            {
              "expression": "question_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "version",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_question_version_current": {
          "name": "ix_question_version_current",
          "columns": [
            {
              "expression": "question_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "version",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_question_text_search": {
          "name": "ix_question_text_search",
          "columns": [
            {
              "expression": "to_tsvector('english', \"question_text\")",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_question_tags": {
          "name": "ix_question_tags",
          "columns": [
            {
              "expression": "tags",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_question_exam_types": {
          "name": "ix_question_exam_types",
          "columns": [
            {
              "expression": "exam_types",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_question_categories": {
          "name": "ix_question_categories",
          "columns": [
            {
              "expression": "categories",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_question_options_gin": {
          "name": "ix_question_options_gin",
          "columns": [
            {
              "expression": "options",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        },
        "ix_question_type_difficulty": {
          "name": "ix_question_type_difficulty",
          "columns": [
            {
              "expression": "question_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "difficulty",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "question_version_question_id_question_question_id_fk": {
          "name": "question_version_question_id_question_question_id_fk",
          "tableFrom": "question_version",
          "tableTo": "question",
          "columnsFrom": ["question_id"],
          "columnsTo": ["question_id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "ck_options_min_count": {
          "name": "ck_options_min_count",
          "value": "jsonb_array_length(options) >= 2"
        },
        "ck_has_correct_answer": {
          "name": "ck_has_correct_answer",
          "value": "jsonb_path_exists(options, '$[*] ? (@.isCorrect == true)')"
        }
      },
      "isRLSEnabled": false
    },
    "public.quiz_session_event": {
      "name": "quiz_session_event",
      "schema": "",
      "columns": {
        "session_id": {
          "name": "session_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "version": {
          "name": "version",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "event_type": {
          "name": "event_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "payload": {
          "name": "payload",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "occurred_at": {
          "name": "occurred_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "event_sequence": {
          "name": "event_sequence",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        }
      },
      "indexes": {
        "pk_quiz_session_event": {
          "name": "pk_quiz_session_event",
          "columns": [
            {
              "expression": "session_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "version",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "event_sequence",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_quiz_event_session_version": {
          "name": "ix_quiz_event_session_version",
          "columns": [
            {
              "expression": "session_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "version",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_quiz_event_occurred": {
          "name": "ix_quiz_event_occurred",
          "columns": [
            {
              "expression": "occurred_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_quiz_event_type": {
          "name": "ix_quiz_event_type",
          "columns": [
            {
              "expression": "event_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_quiz_event_payload": {
          "name": "ix_quiz_event_payload",
          "columns": [
            {
              "expression": "event_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "payload",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "ck_event_sequence_positive": {
          "name": "ck_event_sequence_positive",
          "value": "\"quiz_session_event\".\"event_sequence\" > 0"
        },
        "ck_version_positive": {
          "name": "ck_version_positive",
          "value": "\"quiz_session_event\".\"version\" > 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.quiz_session_snapshot": {
      "name": "quiz_session_snapshot",
      "schema": "",
      "columns": {
        "session_id": {
          "name": "session_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "owner_id": {
          "name": "owner_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "state": {
          "name": "state",
          "type": "quiz_state",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "question_count": {
          "name": "question_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "current_question_index": {
          "name": "current_question_index",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "started_at": {
          "name": "started_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "completed_at": {
          "name": "completed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "version": {
          "name": "version",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "config": {
          "name": "config",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "question_order": {
          "name": "question_order",
          "type": "uuid[]",
          "primaryKey": false,
          "notNull": true
        },
        "answers": {
          "name": "answers",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "ix_snapshot_active_user": {
          "name": "ix_snapshot_active_user",
          "columns": [
            {
              "expression": "owner_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "where": "state = 'IN_PROGRESS'",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_snapshot_owner_state": {
          "name": "ix_snapshot_owner_state",
          "columns": [
            {
              "expression": "owner_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "state",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_snapshot_owner_started": {
          "name": "ix_snapshot_owner_started",
          "columns": [
            {
              "expression": "owner_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "started_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_snapshot_state_started": {
          "name": "ix_snapshot_state_started",
          "columns": [
            {
              "expression": "state",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "started_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_snapshot_expired_cleanup": {
          "name": "ix_snapshot_expired_cleanup",
          "columns": [
            {
              "expression": "completed_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "state IN ('COMPLETED', 'EXPIRED')",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_snapshot_active_expiry": {
          "name": "ix_snapshot_active_expiry",
          "columns": [
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "state = 'IN_PROGRESS'",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "quiz_session_snapshot_owner_id_auth_user_user_id_fk": {
          "name": "quiz_session_snapshot_owner_id_auth_user_user_id_fk",
          "tableFrom": "quiz_session_snapshot",
          "tableTo": "auth_user",
          "columnsFrom": ["owner_id"],
          "columnsTo": ["user_id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "ck_session_state_consistency": {
          "name": "ck_session_state_consistency",
          "value": "\n      CASE \n        WHEN \"quiz_session_snapshot\".\"state\" = 'IN_PROGRESS' THEN \"quiz_session_snapshot\".\"expires_at\" IS NOT NULL\n        WHEN \"quiz_session_snapshot\".\"state\" = 'COMPLETED' THEN \"quiz_session_snapshot\".\"completed_at\" IS NOT NULL\n        WHEN \"quiz_session_snapshot\".\"state\" = 'EXPIRED' THEN \"quiz_session_snapshot\".\"completed_at\" IS NOT NULL\n        ELSE true\n      END\n    "
        },
        "ck_question_index_bounds": {
          "name": "ck_question_index_bounds",
          "value": "\"quiz_session_snapshot\".\"current_question_index\" >= 0 AND \"quiz_session_snapshot\".\"current_question_index\" < \"quiz_session_snapshot\".\"question_count\""
        }
      },
      "isRLSEnabled": false
    },
    "public.subscriptions": {
      "name": "subscriptions",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "plan": {
          "name": "plan",
          "type": "subscription_plan",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'free'"
        },
        "status": {
          "name": "status",
          "type": "subscription_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'active'"
        },
        "buy_me_a_coffee_email": {
          "name": "buy_me_a_coffee_email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "start_date": {
          "name": "start_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "end_date": {
          "name": "end_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "auto_renew": {
          "name": "auto_renew",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "ix_subscriptions_bmac_email": {
          "name": "ix_subscriptions_bmac_email",
          "columns": [
            {
              "expression": "buy_me_a_coffee_email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_subscriptions_status": {
          "name": "ix_subscriptions_status",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "unq_bmac_email": {
          "name": "unq_bmac_email",
          "columns": [
            {
              "expression": "buy_me_a_coffee_email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "subscriptions_user_id_auth_user_user_id_fk": {
          "name": "subscriptions_user_id_auth_user_user_id_fk",
          "tableFrom": "subscriptions",
          "tableTo": "auth_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["user_id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.test_migration": {
      "name": "test_migration",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_progress": {
      "name": "user_progress",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "level": {
          "name": "level",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "experience": {
          "name": "experience",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "total_questions": {
          "name": "total_questions",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "correct_answers": {
          "name": "correct_answers",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "accuracy": {
          "name": "accuracy",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0.00'"
        },
        "study_time_minutes": {
          "name": "study_time_minutes",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "current_streak": {
          "name": "current_streak",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "last_study_date": {
          "name": "last_study_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "category_stats": {
          "name": "category_stats",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{\"version\":1}'::jsonb"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "ix_progress_experience_desc": {
          "name": "ix_progress_experience_desc",
          "columns": [
            {
              "expression": "\"experience\" DESC",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_progress_last_study": {
          "name": "ix_progress_last_study",
          "columns": [
            {
              "expression": "\"last_study_date\" DESC NULLS LAST",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_progress_user_stats": {
          "name": "ix_progress_user_stats",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "updated_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_progress_category_stats_gin": {
          "name": "ix_progress_category_stats_gin",
          "columns": [
            {
              "expression": "category_stats",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        }
      },
      "foreignKeys": {
        "user_progress_user_id_auth_user_user_id_fk": {
          "name": "user_progress_user_id_auth_user_user_id_fk",
          "tableFrom": "user_progress",
          "tableTo": "auth_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["user_id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "ck_progress_accuracy_range": {
          "name": "ck_progress_accuracy_range",
          "value": "\"user_progress\".\"accuracy\" >= 0 AND \"user_progress\".\"accuracy\" <= 100"
        },
        "ck_progress_non_negative_values": {
          "name": "ck_progress_non_negative_values",
          "value": "\n      \"user_progress\".\"level\" >= 1 AND \n      \"user_progress\".\"experience\" >= 0 AND \n      \"user_progress\".\"total_questions\" >= 0 AND \n      \"user_progress\".\"correct_answers\" >= 0 AND\n      \"user_progress\".\"study_time_minutes\" >= 0 AND \n      \"user_progress\".\"current_streak\" >= 0\n    "
        },
        "ck_correct_answers_not_exceed_total": {
          "name": "ck_correct_answers_not_exceed_total",
          "value": "\"user_progress\".\"correct_answers\" <= \"user_progress\".\"total_questions\""
        }
      },
      "isRLSEnabled": false
    },
    "public.webhook_event": {
      "name": "webhook_event",
      "schema": "",
      "columns": {
        "event_id": {
          "name": "event_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "event_type": {
          "name": "event_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "payload": {
          "name": "payload",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "webhook_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "retry_count": {
          "name": "retry_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "max_retries": {
          "name": "max_retries",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 3
        },
        "scheduled_at": {
          "name": "scheduled_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "processed_at": {
          "name": "processed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "error_message": {
          "name": "error_message",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "ix_webhook_status_scheduled": {
          "name": "ix_webhook_status_scheduled",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "scheduled_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_webhook_type": {
          "name": "ix_webhook_type",
          "columns": [
            {
              "expression": "event_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_webhook_retry": {
          "name": "ix_webhook_retry",
          "columns": [
            {
              "expression": "retry_count",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "status = 'failed'",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.difficulty": {
      "name": "difficulty",
      "schema": "public",
      "values": ["Beginner", "Intermediate", "Advanced", "Expert", "Mixed"]
    },
    "public.exam_type": {
      "name": "exam_type",
      "schema": "public",
      "values": ["CCNA", "CCNP_ENCOR", "CCNP_ENARSI", "SECURITY_PLUS"]
    },
    "public.question_status": {
      "name": "question_status",
      "schema": "public",
      "values": ["draft", "active", "inactive", "archived"]
    },
    "public.question_type": {
      "name": "question_type",
      "schema": "public",
      "values": ["single", "multiple"]
    },
    "public.quiz_state": {
      "name": "quiz_state",
      "schema": "public",
      "values": ["IN_PROGRESS", "COMPLETED", "EXPIRED"]
    },
    "public.subscription_plan": {
      "name": "subscription_plan",
      "schema": "public",
      "values": ["free", "premium"]
    },
    "public.subscription_status": {
      "name": "subscription_status",
      "schema": "public",
      "values": ["active", "cancelled", "expired"]
    },
    "public.user_role": {
      "name": "user_role",
      "schema": "public",
      "values": ["guest", "user", "premium", "admin"]
    },
    "public.webhook_status": {
      "name": "webhook_status",
      "schema": "public",
      "values": ["pending", "processing", "completed", "failed"]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}
