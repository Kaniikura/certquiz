{
  "name": "cert-quiz",
  "devDependencies": {
    "@biomejs/biome": "^2.1.1",
    "@commitlint/cli": "^19.8.1",
    "@types/bun": "latest",
    "@types/he": "^1.2.3",
    "@types/uuid": "^10.0.0",
    "@vitest/coverage-v8": "^3.2.4",
    "concurrently": "^9.2.0",
    "knip": "5.62.0",
    "simple-git-hooks": "^2.13.1",
    "typescript": "^5.3.0",
    "vitest": "^3.2.4",
    "wait-on": "^8.0.4"
  },
  "engines": {
    "node": ">=18.0.0",
    "bun": ">=1.1.0"
  },
  "private": true,
  "overrides": {
    "cookie": "0.7.0"
  },
  "simple-git-hooks": {
    "commit-msg": "bunx commitlint --edit $1"
  },
  "scripts": {
    "prepare": "simple-git-hooks",
    "dev": "concurrently -n \"api,web\" -c \"blue,green\" \"bun run dev:api\" \"bun run dev:web\"",
    "dev:services": "concurrently -n \"db,api,web\" -c \"yellow,blue,green\" \"bun run docker:up\" \"bun run dev:api\" \"bun run dev:web\"",
    "dev:api": "bun run --filter @certquiz/api dev",
    "dev:web": "bun run --filter @certquiz/web dev",
    "build": "bun run build:shared && bun run build:api && bun run build:web",
    "build:shared": "cd packages/shared && bun run build",
    "build:api": "cd apps/api && bun run build",
    "build:web": "bun run --filter @certquiz/web build",
    "test": "bun run test:api && bun run test:web",
    "test:api": "bun run --filter @certquiz/api test",
    "test:web": "bun run --filter @certquiz/web test",
    "test:e2e": "bun run --filter @certquiz/web test:e2e",
    "test:e2e:ui": "bun run --filter @certquiz/web test:e2e:ui",
    "test:api:unit": "bun run --filter @certquiz/api test:unit",
    "test:api:integration": "bun run --filter @certquiz/api test:integration",
    "test:api:e2e": "bun run --filter @certquiz/api test:e2e",
    "test:api:watch": "bun run --filter @certquiz/api test:watch",
    "test:api:coverage": "bun run --filter @certquiz/api test:coverage",
    "test:cleanup": "./scripts/cleanup-testcontainers.sh",
    "dev:api:background": "bun run --filter @certquiz/api dev > /tmp/api.log 2>&1 & echo $! > /tmp/api.pid",
    "dev:api:stop": "kill $(cat /tmp/api.pid) 2>/dev/null || true; rm -f /tmp/api.pid /tmp/api.log",
    "wait-for-api": "wait-on http://localhost:4000/health/ready -t 30000",
    "test:api:e2e:ci": "bun run dev:api:background && bun run wait-for-api && bun run test:api:e2e; bun run dev:api:stop",
    "test:integration:ci": "bun run dev:api:background && bun run wait-for-api && bun run test && bun run dev:api:stop",
    "db:generate": "bun --filter @certquiz/api db:generate",
    "db:migrate": "bun --filter @certquiz/api db:migrate",
    "db:push": "bun --filter @certquiz/api db:push",
    "db:check": "bun --filter @certquiz/api db:check",
    "db:studio": "bun --filter @certquiz/api db:studio",
    "db:drop": "bun --filter @certquiz/api db:drop",
    "db:reset": "bun --filter @certquiz/api db:reset",
    "db:seed": "bun --filter @certquiz/api db:seed",
    "db:seed:clear": "bun --filter @certquiz/api db:seed:clear",
    "db:seed:reset": "bun --filter @certquiz/api db:seed:reset",
    "docker:up": "docker-compose -f docker/docker-compose.yml up -d",
    "docker:down": "docker-compose -f docker/docker-compose.yml down",
    "docker:logs": "docker-compose -f docker/docker-compose.yml logs -f",
    "setup": "./scripts/setup.sh",
    "typecheck": "tsc -b tsconfig.build.json && bun run typecheck:web",
    "typecheck:build": "tsc -b tsconfig.build.json",
    "typecheck:api": "tsc -b apps/api/tsconfig.build.json",
    "typecheck:web": "cd apps/web && svelte-check --tsconfig ./tsconfig.json",
    "typecheck:shared": "tsc -b packages/shared",
    "lint": "biome lint --write --unsafe",
    "lint:check": "biome lint",
    "format": "biome format --write",
    "format:check": "biome format",
    "check": "tsc --noEmit && biome check --write --unsafe && knip",
    "ci": "tsc --noEmit && biome check && knip",
    "knip": "knip",
    "knip:fix": "knip --fix",
    "knip:production": "knip --production"
  },
  "type": "module",
  "workspaces": [
    "apps/*",
    "packages/*"
  ],
  "dependencies": {
    "he": "^1.2.0"
  }
}
